# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import bank_pb2 as bank__pb2


class BankStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.balance = channel.unary_unary(
                '/Bank/balance',
                request_serializer=bank__pb2.balance_request.SerializeToString,
                response_deserializer=bank__pb2.balance_response.FromString,
                )
        self.payment = channel.unary_unary(
                '/Bank/payment',
                request_serializer=bank__pb2.payment_request.SerializeToString,
                response_deserializer=bank__pb2.payment_response.FromString,
                )
        self.transfer = channel.unary_unary(
                '/Bank/transfer',
                request_serializer=bank__pb2.transfer_request.SerializeToString,
                response_deserializer=bank__pb2.transfer_response.FromString,
                )
        self.end_of_work = channel.unary_unary(
                '/Bank/end_of_work',
                request_serializer=bank__pb2.end_of_work_request.SerializeToString,
                response_deserializer=bank__pb2.end_of_work_response.FromString,
                )


class BankServicer(object):
    """Missing associated documentation comment in .proto file."""

    def balance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def payment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def transfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def end_of_work(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BankServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'balance': grpc.unary_unary_rpc_method_handler(
                    servicer.balance,
                    request_deserializer=bank__pb2.balance_request.FromString,
                    response_serializer=bank__pb2.balance_response.SerializeToString,
            ),
            'payment': grpc.unary_unary_rpc_method_handler(
                    servicer.payment,
                    request_deserializer=bank__pb2.payment_request.FromString,
                    response_serializer=bank__pb2.payment_response.SerializeToString,
            ),
            'transfer': grpc.unary_unary_rpc_method_handler(
                    servicer.transfer,
                    request_deserializer=bank__pb2.transfer_request.FromString,
                    response_serializer=bank__pb2.transfer_response.SerializeToString,
            ),
            'end_of_work': grpc.unary_unary_rpc_method_handler(
                    servicer.end_of_work,
                    request_deserializer=bank__pb2.end_of_work_request.FromString,
                    response_serializer=bank__pb2.end_of_work_response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Bank', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Bank(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def balance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Bank/balance',
            bank__pb2.balance_request.SerializeToString,
            bank__pb2.balance_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def payment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Bank/payment',
            bank__pb2.payment_request.SerializeToString,
            bank__pb2.payment_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def transfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Bank/transfer',
            bank__pb2.transfer_request.SerializeToString,
            bank__pb2.transfer_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def end_of_work(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Bank/end_of_work',
            bank__pb2.end_of_work_request.SerializeToString,
            bank__pb2.end_of_work_response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
